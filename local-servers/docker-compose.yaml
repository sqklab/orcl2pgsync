version: '3.9'
services:
  zookeeper:
    profiles: [kafka-connect, kafka-cluster, all]
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:${KAFKA_VERSION}
    volumes:
      - "./volume/zookeeper/data:/data"
      - "./volume/zookeeper/logs:/datalog"
    ports:
      - "2181:2181"
    environment: 
      ZOOKEEPER_CLIENT_PORT: 2181 
      ZOOKEEPER_TIME_TICK: 2000

  kafka1:
    profiles: [kafka-connect, kafka-cluster, all]
    container_name: kafka1
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    restart: on-failure
    ports:
      - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    depends_on:
      - zookeeper

  kafka2:
    profiles: [kafka-connect, kafka-cluster, all]
    container_name: kafka2
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    restart: on-failure
    ports:
      - "9093:9093"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    depends_on:
      - zookeeper

  kafka-ui:
    profiles: [kafka-connect, kafka-cluster, all]
    image: provectuslabs/kafka-ui:v0.4.0
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "localhost"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9092,kafka2:9093"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
      KAFKA_CLUSTERS_0_READONLY: "false"
    depends_on:
      - kafka1
      - kafka2

  connect:
    profiles: [kafka-connect, all]
    container_name: connect
    image: debezium/connect-with-oracle-jdbc:1.9.6.Final
    build:
      context: debezium-with-oracle-jdbc
      args:
        DEBEZIUM_VERSION: 1.9.6.Final
    ports:
      - 8083:8083
      - 5005:5005
    environment:
      BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9093
      GROUP_ID: oracle
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      REPLICATION_FACTOR: 2
      KAFKA_DEBUG: "true"
      DEBUG_SUSPEND_FLAG: n
      # DEBUG_SUSPEND_FLAG: y
      JAVA_DEBUG_PORT: 0.0.0.0:5005
    depends_on:
      - kafka-ui

  oracle:
    profiles: [oracle, db, all]
    container_name: oracle
    image: oracle/database:12.2.0.1-ee
    ports:
      - 1521:1521
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    environment:
      ORACLE_PWD: top_secret
    volumes:
      - "./volume/oradata:/opt/oracle/oradata"

  postgres:
    profiles: [postgres, db, all]
    container_name: postgres
    image: postgres:13.5-alpine
    # restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - ./volume/pgdata:/var/lib/postgresql/data
      - ./init/pg.sql:/docker-entrypoint-initdb.d/create_tables.sql
    command: [ "postgres", "-c", "wal_level=logical" ]

  localstack:
    profiles: [localstack]
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
      - "127.0.0.1:53:53"                # DNS config (only required for Pro)
      - "127.0.0.1:53:53/udp"            # DNS config (only required for Pro)
      - "127.0.0.1:443:443"              # LocalStack HTTPS Gateway (only required for Pro)
    environment:
      - DEBUG=${DEBUG-}
      - PERSISTENCE=${PERSISTENCE-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-}  # only required for Pro
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume/localstack}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

